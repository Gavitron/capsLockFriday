#include <Arduino.h>
#include <ss_oled.h>
//#include <KeyboardButton.h>
#include <Keyboard.h>

#define PIN_LED 4
#define PIN_BTN 15

// if your system doesn't have enough RAM for a back buffer, comment out
// this line (e.g. ATtiny85)
#define USE_BACKBUFFER
static uint8_t ucBackBuffer[1024];

// Use -1 for the Wire library default pins
// or specify the pin numbers to use with the Wire library or bit banging on any GPIO pins
// These are the pin numbers for the M5Stack Atom default I2C
#define SDA_PIN 2
#define SCL_PIN 3
// Set this to -1 to disable or the GPIO pin number connected to the reset
// line of your display if it requires an external reset
#define RESET_PIN -1
// let ss_oled figure out the display address
#define OLED_ADDR 0x3C
// don't rotate the display
#define FLIP180 0
// don't invert the display
#define INVERT 0
// Bit-Bang the I2C bus
#define USE_HW_I2C 1

// Change these if you're using a different OLED display
#define MY_OLED OLED_128x32
#define OLED_WIDTH 128
#define OLED_HEIGHT 32

SSOLED ssoled;
#define LED_TIMING 10000
unsigned long led_delay = 0;

/* setup() */
void setup() {
  // setup the btn
  pinMode(PIN_BTN, INPUT_PULLUP);
//  Keyboard.begin();
//  KeyboardButton::enableButton(0, KEY_CAPS_LOCK);


  // setup OLED
  int rc;
  rc = oledInit(&ssoled, MY_OLED, OLED_ADDR, FLIP180, INVERT, USE_HW_I2C, SDA_PIN, SCL_PIN, RESET_PIN, 400000L); // use standard I2C bus at 400Khz
  if (rc != OLED_NOT_FOUND) {
    char *msgs[] = {(char *)"SSD1306 @ 0x3C", (char *)"SSD1306 @ 0x3D",(char *)"SH1106 @ 0x3C",(char *)"SH1106 @ 0x3D"};
    oledFill(&ssoled, 0, 1);
    oledWriteString(&ssoled, 0,0,0,msgs[rc], FONT_NORMAL, 0, 1);
    oledSetBackBuffer(&ssoled, ucBackBuffer);
   delay(500);

    oledFill(&ssoled, 0x0, 1);
    oledWriteString(&ssoled, 0,16,0,(char *)"ss_oled Demo", FONT_NORMAL, 0, 1);
    oledWriteString(&ssoled, 0,0,1,(char *)"Written by Larry Bank", FONT_SMALL, 1, 1);
    oledWriteString(&ssoled, 0,16,2,(char *)"ss_oled Demo", FONT_NORMAL, 0, 1);
    oledWriteString(&ssoled, 0,0,3,(char *)"Written by Larry Bank", FONT_SMALL, 1, 1);
    delay(2000);
  }

  // Flash LED
  pinMode(PIN_LED, OUTPUT);

  digitalWrite(PIN_LED, LOW);
  for (int i = 0; i < 5; i++) {
    delay(60);
    digitalWrite(PIN_LED, HIGH);
    delay(60);
    digitalWrite(PIN_LED, LOW);
  }

} 

// put your main code here, to run repeatedly:
void loop() {
    char szTemp[20];
//    KeyboardButton::updateButtons();

    if (digitalRead(PIN_BTN) == 0) {
        Keyboard.write('z');  // send a 'z' to the computer via Keyboard HID
        oledWriteString(&ssoled, 0,0,0,szTemp, FONT_NORMAL, 0, 1);
        oledWriteString(&ssoled, 0,0,1,(char *)"With backbuffer", FONT_SMALL,0,1);
        oledWriteString(&ssoled, 0,0,2,szTemp, FONT_NORMAL, 0, 1);
        oledWriteString(&ssoled, 0,0,3,(char *)"With backbuffer", FONT_SMALL,0,1);
        delay(500);  // delay so there aren't a kajillion z's
        led_delay = 500;
    }
    if (led_delay++ >= LED_TIMING) {
        oledFill(&ssoled, 0x0, 1);
        led_delay = 0;
    }

} /* loop() */
